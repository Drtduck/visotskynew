---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Sidebar from '../../components/Sidebar.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

const formattedDate = new Date(post.data.date).toLocaleDateString('ru-RU', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<Layout title={post.data.title}>
  <div class="lg:hidden">
    <button 
      id="menu-toggle"
      class="fixed top-4 right-4 z-50 p-2 bg-[#1c1f26] rounded-lg"
      aria-label="Toggle menu"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7" />
      </svg>
    </button>
  </div>

  <div class="lg:block hidden">
    <Sidebar />
  </div>
  
  <div id="mobile-menu" class="fixed inset-0 bg-black/95 z-40 lg:hidden hidden">
    <Sidebar />
  </div>
  
  <main class="lg:ml-64">
    <div class="max-w-4xl mx-auto px-4 lg:px-8 py-12">
      <article class="prose prose-invert max-w-none">
        <div class="relative h-[250px] lg:h-[400px] mb-8 rounded-xl overflow-hidden">
          <img 
            src={post.data.image} 
            alt={post.data.title}
            class="w-full h-full object-cover"
          />
        </div>
        
        <time datetime={post.data.date.toISOString()} class="text-sm text-gray-400">
          {formattedDate}
        </time>
        
        <h1 class="text-3xl lg:text-4xl font-bold mt-4 mb-8">{post.data.title}</h1>
        
        <Content />
      </article>
    </div>
  </main>
</Layout>

<script>
  const menuToggle = document.getElementById('menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');

  menuToggle?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });

  mobileMenu?.addEventListener('click', (e) => {
    if (e.target === mobileMenu) {
      mobileMenu.classList.add('hidden');
    }
  });
</script>
